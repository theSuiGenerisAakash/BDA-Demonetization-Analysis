load("E:/RStudio/workspace/TweetCountVsTime/twitter authentication.Rdata")
library(twitteR)
library(ROAuth)
library(tm)
library(ggplot2)
library(stringr)
library(plyr)
library(dplyr)
setup_twitter_oauth(cred$consumerKey,cred$consumerSecret,cred$oauthKey,cred$oauthSecret)
search.string<-'#demonetization OR demonetization OR note ban OR #noteban'
save.image("E:/RStudio/workspace/TweetCountVsTime/TweetCountVsTime.RData")
tweets<-search_twitter_and_store(search.string,table_name = "tweetsForCount")
search
tweets<-searchTwitteR(search.string,n = 1500)
tweets$get(0)
tweets.get(0)
tweets
tweets[0]
tweets[[0]]
tweets.get(0)
tweets[[[0]]]
tweets[[0]]
tweets[[1]]
tweets[[1]]$created
tweets.corpus<-Corpus(VectorSource(tweets))
tweets.corpus[[1]]
tweets.corpus[[0]]
tweets.corpus
tweets.corpus[[1]]$meta$datetimestamp
tweets.time<-lapply(tweets, function(x)x$created)
tweets.time$get(10=)
tweets.time$get(1)
tweets.time[1]
tweets.time[1:10]
tweets.time[1][1]
tweets.time[[1]
]
tweets.time<-lapply(tweets.time, function(x)substr(strsplit(x," ")[2],0,1))
typeof(tweets.time[[1]])
typeof(tweets.time[1])
tweets.text<-lapply(tweets.text,function(x)x[1])
tweets.time<-lapply(tweets.time,function(x)x[1])
tweets.time[1]
typeof(tweets.time[1])
tweets.time<-sapply(tweets.time,function(x)x[1])
typeof(tweets.time[1])
tweets.time<-sapply(tweets.time,function(x)string(x))
library(as)
tweets.time<-sapply(tweets.time,function(x)as.String(x))
typeof(tweets.time[1])
tweets.time[1]
tweets.time<-sapply(tweets.time,function(x)as.character.Date(x,simplify = TRUE))
tweets.time[1]
typeof(tweets.time[1])
tweets.text<-sapply(tweets,function(x)x$created)
tweets.text[[1]]
tweets
tweets.text
rm(tweets.text)
tweets.time<-sapply(tweets, function(x)x$created)
tweets.time[1]
tweets.time<-sapply(tweets, function(x)as.double.POSIXlt(x))
typeof(tweets.time[1])
tweets.time<-lapply(tweets, function(x)x$created)
typeof(tweets.time[1])
tweets.time<-sapply(tweets.time,function(x)x[1])
typeof(tweets.time[1])
tweets.time[1]
tweets.time<-lapply(tweets, function(x)x$created)
tweets.time<-lapply(tweets, function(x)x[1])
tweets.time<-lapply(tweets.time, function(x)x[1])
tweets.time[1]
typeof(tweets.time[1])
typeof(tweets.time[1][1])
typeof(tweets.time[[1]])
tweets.time<-sapply(tweets.time,function(x)x[1])
typeof(tweets.time[1][1])
typeof(tweets.time[1])
tweets.time<-sapply(tweets.time,function(x)as.POSIXlt(x))
as.POSIXlt(tweets.time[1])
\tweets.time[1]
tweets.time[1]
tweets.time[1]+10
tweets.time[1]-10
as.POSIXlt.Date(tweets.time[1])
as.POSIXlt.date(tweets.time[1])
as.POSIXct(tweets.time[1],origin="1970-01-01")
as.POSIXct(tweets.time[1],origin="1970-01-01")$hour
typeof(as.POSIXct(tweets.time[1],origin="1970-01-01"))
typeof(as.POSIXlt(tweets.time[1],origin="1970-01-01"))
as.POSIXlt(tweets.time[1],origin="1970-01-01")$hour
tweets.time<-sapply(tweets.time,function(x)as.POSIXlt(x,origin="1970-01-01")$hour)
qplot(tweets.time, geom="histogram")
tweets.time
getOption("max.print")
tweets.time[1500]
tweets[1500]
tweets[1500]$created
typeof(tweets[1500])
tweets[1500][2]
tweets[1500]$text
tweets
tweets[1]$id
typeof(tweets[1]$id)
tweets<-searchTwitteR(search.string,n = 1500)
tweets[1]$id
tweets[1500]$text
tweets[[1]]
tweets[[1]]$created
tweets.time<-lapply(tweets.time, function(x)as.POSIXlt(x[1],origin='1970-01-01')$hour)
tweets.time[1]
tweets.time<-sapply(tweets, function(x)as.POSIXlt(x[1],origin='1970-01-01')$hour)
tweets.time<-lapply(tweets, function(x)as.POSIXlt(x[1],origin='1970-01-01')$hour)
tweets.time<-sapply(tweets,function(x)x[1])
tweets.time<-sapply(tweets,function(x)x$created)
tweets.time<-sapply(tweets.time,function(x)as.POSIXct(x,origin='1970-01-01')$hour)
tweets.time<-sapply(tweets.time,function(x)as.POSIXlt(x,origin='1970-01-01')$hour)
tweets.time[1]
tweets.time[1500]
tweets.time<-sapply(tweets,function(x)x$created)
tweets.time[1500]
as.POSIXct(tweets.time[1500],origin='1970-01-01')
as.POSIXct(tweets.time[1400],origin='1970-01-01')
as.POSIXlt(tweets.time[1],origin="1970-01-01")$hour
typeof(tweets.time[1])
tweets.time[1]+10
as.POSIXlt(tweets.time[1],origin="1970-01-01")
as.POSIXlt(tweets.time[1499],origin="1970-01-01")
tweets.time
as.POSIXlt(tweets.time,origin="1970-01-01")
tweets.time<-sapply(tweets.time,function(x)as.POSIXlt(x,origin="1970-01-01")$hour)
qplot(tweets.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of tweets per hour",
xlab = "No of tweets",
fill=I("blue"),
col=I("red"),
alpha=I(.2),
xlim=c(20,50))
qplot(tweets.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of tweets per hour",
xlab = "No of tweets",
fill=I("blue"),
col=I("red"),
alpha=I(.2),
xlim=c(0,24))
qplot(tweets.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of tweets per hour",
xlab = "No of tweets",
fill=I("blue"),
col=I("red"),
xlim=c(0,24))
qplot(tweets.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of tweets per hour",
xlab = "No of tweets",
fill=I("blue"),
col=I("red"),
alpha=I(.5),
xlim=c(0,24))
qplot(tweets.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of tweets per hour",
xlab = "No of tweets",
fill=I("blue"),
alpha=I(.5),
xlim=c(0,24))
qplot(tweets.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of tweets per hour",
xlab = "Hour of the day", ylab = "No of tweets"
fill=I("blue"),
alpha=I(.5),
xlim=c(0,24))
qplot(tweets.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of tweets per hour",
xlab = "Hour of the day", ylab = "No of tweets",
fill=I("blue"),
alpha=I(.5),
xlim=c(0,24))
qplot(tweets.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of tweets per hour",
xlab = "Hour of the day", ylab = "No of tweets",
fill=I("blue"),
alpha=I(.5),
xlim=c(0,23))
tweets.time<-lapply(tweets, function(x)x$created)
rm(tweets.corpus)
if(tweets[[1]]$isRetweet==TRUE)print('a')
tweets.rt.time<-sapply(tweets, function(x)if(x$isRetweet)return x$created)
tweets.rt.time<-sapply(tweets, function(x)if(x$isRetweet){x$created})
tweets.rt.time<-invisible(sapply(tweets, function(x)if(x$isRetweet){x$created}))
tweets[1]$text
tweets[[1]$text
tweets[[1]]$text
tweets.rt.time1<-sapply(tweets.rt.time,function(x){if(x!=NULL)return x})
tweets.rt.time1<-sapply(tweets.rt.time,function(x){if(x!=NULL)return x;})
tweets.rt.time1<-sapply(tweets.rt.time,function(x)if(x!=NULL)return x)
tweets.rt.time1<-sapply(tweets.rt.time,function(x)if(x!=NULL)x)
tweets.rt.time1<-sapply(tweets.rt.time,function(x)if(x!=NULL){x})
tweets.rt.time[1]
tweets.rt.time[[1]]
tweets.rt.time<-sapply(tweets.rt.time,function(x)x[1])
tweets.rt.time1<-sapply(tweets.rt.time,function(x)if(x!=NULL){x})
tweets.rt.time
tweets.rt.time1<-sapply(tweets.rt.time,function(x)all(x!=NULL))
tweets.rt.time1[1]
tweets.rt.time1[2]
tweets.rt.time1[44]
tweets.rt.time1[4432]
tweets.rt.time1
tweets.rt.time[4]
typeof(tweets.rt.time[4])
typeof(tweets.rt.time[[4]])
tweets.rt.time<-sapply(tweets.rt.time, function(x)x[1])
typeof(tweets.rt.time[4])
tweets.rt.time<-sapply(tweets.rt.time, function(x)x[[1]])
typeof(tweets.rt.time[4])
tweets.rt.time<-sapply(tweets.rt.time, function(x)x[1]$format)
tweets.rt.time<-sapply(tweets.rt.time, function(x)x[1][2])
typeof(tweets.rt.time[4])
tweets.rt.time<-invisible(sapply(tweets, function(x)if(x$isRetweet){x$created}))
tweets.rt.time<-invisible(sapply(tweets, function(x)if(x$isRetweet){as.double(x$created)}))
tweets.rt.time[1]
typeof(tweets.rt.time[1])
tweets.rt.time<-sapply(tweets.rt.time,function(X)X[1])
typeof(tweets.rt.time[1])
tweets.rt.time<-sapply(tweets.rt.time,function(X)X[[1]])
typeof(tweets.rt.time[1])
typeof(tweets.rt.time[[1])
typeof(tweets.rt.time[[1]])
tweets.rt.time<-sapply(tweets.rt.time,function(X)as.numeric(x[1]))
tweets.rt.time<-invisible(sapply(tweets, function(x)if(x$isRetweet){x$created}))
tweets.rt.time<-sapply(tweets.rt.time,function(x)as.POSIXlt(x[1],origin='1970-01-01'))
tweets.rt.time<-sapply(tweets.rt.time,function(x)as.POSIXlt(x,origin='1970-01-01'))
tweets.rt.time<-sapply(tweets.rt.time,function(x)as.POSIXlt(x[[1]],origin='1970-01-01'))
tweets.rt.time1<-sapply(tweets.rt.time,function(x)x[1])
tweets.rt.time1[1]
View(tweets.time)
tweets.rt.time1[[1]]
tweets.rt.time1<-sapply(tweets.rt.time,function(x)x[[1])
tweets.rt.time1<-sapply(tweets.rt.time,function(x)x[[1]]
)
tweets.rt.time1[[1]]
tweets.rt.time1[1]
tweets.rt.time1<-lapply(tweets.rt.time,function(x)x[1])
tweets.rt.time1[1]
tweets.rt.time1<-lapply(tweets.rt.time,function(x)x[[1]])
tweets.rt.time1[1]
tweets.rt.time1<-sapply(tweets.rt.time,function(x)as.double(x[1]))
tweets.rt.time1[1]
tweets.rt.time1<-sapply(tweets.rt.time,function(x)x[1])
tweets.rt.time1[1]
View(tweets.rt.time1)
tweets.rt.time1<-sapply(tweets.rt.time,function(x)as.numeric(unlist(x)))
tweets.rt.time1
tweets.rt.time1<-sapply(tweets.rt.time,function(x)as.numeric(unlist(x[1])))
tweets.rt.time1[1]
tweets.rt.time1[[1]
]
as.numeric(unlist(tweets.rt.time1[1]))
as.numeric(unlist(tweets.rt.time1))
tweets.rt.time1
tweets.rt.time1<-as.numeric(unlist(tweets.rt.time1))
tweets.rt.time1[1]
tweets.rt.time1<-lapply(tweeets.rt.time,function(x)x)
tweets.rt.time1<-lapply(tweets.rt.time1,function(x)x)
tweets.rt.time1[1]
tweets.rt.time1<-as.numeric(unlist(tweets.rt.time1))
tweets.rt.time1[1]
tweets.rt.time1[1500]
tweets.rt.time1[1499]
tweets.rt.time1[1222]
tweets.rt.time1
count(tweets.rt.time1,wt=NULL)
length(which(NULL==tweets.rt.time1))
length(which(NULL==tweets.rt.time))
length(which(NULL==tweets.rt.time[]))
View(tweets.rt.time)
length(which(NULL==unlist(tweets.rt.time)))
length(tweets.rt.time)
length(unlist(tweets.rt.time))
tweets.rt.time<-unlist(tweets.rt.time)
length(tweets.rt.time)
tweets.rt.time[1]
tweets.rt.time<-sapply(tweets.rt.time,function(x)as.POSIXlt(x,origin="1970-01-01")$hour)
tweets.rt.time[1455]
tweets.rt.time[800]
qplot(tweets.rt.time,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of re-tweets per hour",
xlab = "Hour of the day", ylab = "No of re-tweets",
fill=I("red"),
alpha=I(.5),
xlim=c(0,24))
tweets.rt.time.min<-tweets.rt.time1
tweets.rt.time.min<-sapply(tweets.rt.time.min,function(x)as.POSIXlt(x,origin="1970-01-01")$min)
qplot(tweets.rt.time.min,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of re-tweets per minute",
xlab = "Minute of the hour", ylab = "No of re-tweets",
fill=I("green"),
alpha=I(.7),
xlim=c(0,59))
qplot(tweets.rt.time.min,
geom="histogram",
binwidth = 0.5,
main = "Histogram for no of re-tweets per minute",
xlab = "Minute of the hour", ylab = "No of re-tweets",
fill=I("green"),
alpha=I(.4),
xlim=c(0,59))
qplot(tweets.rt.time.min,
geom="histogram",
binwidth = 0.8,
main = "Histogram for no of re-tweets per minute",
xlab = "Minute of the hour", ylab = "No of re-tweets",
fill=I("green"),
alpha=I(.7),
xlim=c(0,59))
qplot(tweets.rt.time.min,
geom="histogram",
binwidth = 0.4,
main = "Histogram for no of re-tweets per minute",
xlab = "Minute of the hour", ylab = "No of re-tweets",
fill=I("green"),
alpha=I(.7),
xlim=c(0,59))
tweets.rt.time.copy<-tweets.rt.time1
rm(tweets.rt.time1)
save.image("E:/RStudio/workspace/TweetCountVsTime/TweetCountVsTime.RData")
tweets[[1]]$favorited
tweets[[1]]$favoriteCOunt
tweets[[1]]$favoriteCount
tweets.popularity<-sapply(tweets,function(x)x$retweetCount+x$favoriteCount)
tweets.id<-sapply(tweets,function(x)x$id)
df.popularity<-data.frame(tweets,tweets.popularity)
df.popularity<-data.frame(tweets.id,tweets.popularity)
df
df[1]
df[1:1]
df[1][1]
df.popularity
arrange(dd,desc(tweets.popularity))
arrange(df.popularity,desc(tweets.popularity))
save.image("E:/RStudio/workspace/TweetCountVsTime/TweetCountVsTime.RData")
df.popularity[,c("tweets.id")]
unlist(tweets)$id
unlist(tweets)
tweets.popular<-sapply(df.popularity[,c("tweets.id")],function(x)for (variable in tweets) {
if(variable$id==x){variable}
}
)
View(df.popularity)
View(tweets.popular)
for(i in df.popularity[,c("tweets.id")] ){}
rm(tweets.popular)
tweets.popular<-list()
i=1
for(q in df.popularity[,c("tweets.id")] ){
tweets.popular[i]<-unlist(lapply(tweets,function(x)if(x$id==q)x))
i<-i+1
}
)
View(tweets.popular)
tweets.popular[1]$id
tweets.popular[[1]$id
tweets.popular[[1]]$id
df.popularity<-arrange(df.popularity,desc(tweets.popularity))
df.popularity
for(q in df.popularity[,c("tweets.id")] ){
+     tweets.popular[i]<-unlist(lapply(tweets,function(x)if(x$id==q)x))
+     i<-i+1}
i=1
tweets.popular<-list()
for(q in df.popularity[,c("tweets.id")] ){
tweets.popular[i]<-unlist(lapply(tweets,function(x)if(x$id==q)x))
i<-i+1
}
save.image("E:/RStudio/workspace/TweetCountVsTime/TweetCountVsTime.RData")
tweets.popular[500]$id
tweets.popular[[500]$id
tweets.popular[[500]]$id
save.image("E:/RStudio/workspace/TweetCountVsTime/TweetCountVsTime.RData")
load("E:/RStudio/workspace/TweetCountVsTime/TweetCountVsTime.RData")
View(tweets.popular)
load("E:/RStudio/workspace/BDA_Assignment_DemonetizationAnalysis/TweetCountVsTime/TweetCountVsTime.RData")
df.popularity[1]
df.popularity[1][1]
df.popularity[[1]]
df.popularity[[1][1]]
df.popularity
tweets.popular[[1]]$id
tweets.popular[[1]]$text
tweets.popular[[1500]]$text
load("E:/RStudio/workspace/BDA_Assignment_DemonetizationAnalysis/TweetCountVsTime/TweetCountVsTime.RData")
View(df.popularity)
install.package(rmongodb)
install.packages(rmongodb)
install.packages('rmongodb')
library(devtools)
install_github(repo = "mongosoup/rmongodb")
install.packages('devtools')
library(devtools)
install_github(repo = "mongosoup/rmongodb")
library(rmongodb)
# connect to MongoDB
mongo = mongo.create(host = "localhost")
mongo.is.connected(mongo)
library(devtools)
install_github(repo = "mongosoup/rmongodb")
library(rmongodb)
# connect to MongoDB
mongo = mongo.create(host = "localhost")
mongo.is.connected(mongo)
update_packages(repos = 'mongosoup/rmongodb')
library(rmongodb)
# connect to MongoDB
mongo = mongo.create(host = "localhost")
mongo.is.connected(mongo)
library(rmongodb)
# connect to MongoDB
mongo = mongo.create(host = "localhost")
mongo.is.connected(mongo)
mongo.disconnect(mongo)
mongo.is.connected(mongo)
library(rmongodb)
# connect to MongoDB
mongo = mongo.create(host = "localhost")
mongo.is.connected(mongo)
mongo.get.databases(mongo)
mongo.get.databases.collections(mongo, db = 'test')
mongo.get.database.collections(mongo, db = 'test')
mongo.create(db='rmongo')
mongo.is.connected(mongo)
mongo.get.database.collections(mongo, db = 'test')
mongo.create(db='rmongo')
mongo.get.database.collections(mongo, db = 'test')
mongo
mongo_conn = mongo.create(db='rmongo')
mongo.is.connected(mongo_conn)
mongo_conn=mongo.create(db='admin')
mongo.is.connected(mongo_conn)
mongo.get.databases(mongo_conn)
mongo_conn = mongo.create(db='rmongo')
mongo.get.databases(mongo_conn)
mongo.disconnect(mongo_conn)
mongo_conn = mongo.create(db='rmongo')
mongo.get.databases(mongo_conn)
mongo_conn = mongo.create(db='rmongo',username='RMongo',password = '12345678')
mongo_conn = mongo.create(db='admin',username='RMongo',password = '12345678')
mongo_conn = mongo.create(db='rmongo',username='RMongo',password = '12345678')
mongo_conn = mongo.create(db='admin',username='RMongo',password = '12345678')
mongo_conn = mongo.create(db='admin',username='RMongo',password = '12345678',host='127.0.0.1',name=='')
mongo_conn = mongo.create(db='admin',username='RMongo',password = '12345678',host='127.0.0.1')
mongo_conn = mongo.create(db='admin',username='Aakash',password = 'aakash1995',host='127.0.0.1')
remove.packages(rmongodb)
remove.packages(repo='mongosoup/rmongodb')
library(rmongodb)
uninstall(rmongodb)
remove.packages(rmongodb)
uninstall(pkg="mongosoup/rmongodb")
uninstall(pkg="rmongodb")
mongo_conn = mongo.create(db='rmongo'
)
mongo_conn = mongo.create(db='rmongo')
mongo_conn.disconnect()
mongo_conn.disconnect
mongo_conn = mongo.create(db='rmongo')
mongo.disconnect(mongo_conn)
mongo_conn = mongo.create(db='rmongo')
mongo.insert(mongo_conn,'store',mongo.bson.from.list(tweets))
tweets.popular[1]
tweets.popular[[1]
]
for i in tweets.popular:
for i in tweets.popular
mongo.insert(mongo_conn,'store',mongo.bson.from.list(unlist(tweets.popular)))
typeof(tweets.popular[1])
typeof(tweets.popular[[1]])
library(jsonlite)
toJSON(tweets.popular[[1]])
faf<-jsonlite::toJSON(status(),force=TRUE,auto_unbox=TRUE,pretty=TRUE)
faf<-jsonlite::toJSON(tweets.popular[[1]],force=TRUE,auto_unbox=TRUE,pretty=TRUE)
faf
tweets.popular[[1]]
faf<-jsonlite::toJSON(tweets.popular[[1]]$getClass(status),force=TRUE,auto_unbox=TRUE,pretty=TRUE)
faf<-jsonlite::toJSON(tweets.popular[[1]]$getClass(),force=TRUE,auto_unbox=TRUE,pretty=TRUE)
faf
faf<-jsonlite::toJSON(tweets.popular[[1]]$toDataFrame,force=TRUE,auto_unbox=TRUE,pretty=TRUE)
faf
faf<-jsonlite::toJSON(tweets.popular[[1]]$`toDataFrame#twitterObj`(),force=TRUE,auto_unbox=TRUE,pretty=TRUE)
remove(faf)
load("E:/RStudio/workspace/BDA_Assignment_DemonetizationAnalysis/TweetCountVsTime/TweetCountVsTime.RData")
View(df.popularity)
View(tweets.popular)
load("E:/RStudio/workspace/BDA_Assignment_DemonetizationAnalysis/TweetCountVsTime/TweetCountVsTime.RData")
